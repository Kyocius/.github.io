<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>区块链 on 游尔港</title>
    <link>https://kyocius.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/</link>
    <description>Recent content in 区块链 on 游尔港</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>Kyocius. 本站遵循 CC-BY-NC 4.0 协议</copyright>
    <lastBuildDate>Fri, 06 Sep 2024 00:28:00 +0800</lastBuildDate><atom:link href="https://kyocius.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>潦草 PKU 区块链备忘录（下）</title>
      <link>https://kyocius.github.io/posts/pku-blockchain/2024-09-06-pku-eth/</link>
      <pubDate>Fri, 06 Sep 2024 00:28:00 +0800</pubDate>
      
      <guid>https://kyocius.github.io/posts/pku-blockchain/2024-09-06-pku-eth/</guid>
      <description>状态树 概念 Merkle Patricia Tree：结合了 Merkle Tree 和 Patricia 前缀树。 Patricia 前缀树：压缩前缀树，可以高效存储和检索键值对。 例如，如果两个字符串 &amp;ldquo;apple&amp;rdquo; 和 &amp;ldquo;apricot&amp;rdquo; 的前缀 &amp;ldquo;app&amp;rdquo; 相同，它们就会被压缩到同一个节点中，该节点只存储 &amp;ldquo;app&amp;rdquo;，然后分别指向 &amp;ldquo;le&amp;rdquo; 和 &amp;ldquo;ricot&amp;rdquo; 的子节点。
GHOST GHOST（Greedy Heaviest Observed Subtree） 协议是对传统最长链规则的改进。它决定主链的方式不同，不仅仅基于链的长度，还要基于链的“重量”（即考虑链上包含的所有块的总和，包括叔块）。
以太坊中的实现 叔块奖励 如果叔块被包含在主链中，它们的创建者可以获得较少于正常区块的奖励。此外，包含叔块的区块创建者也会得到奖励。
叔块的要求 叔块必须是与主链具有共同祖先的块，并且必须在一定深度内（即与当前区块不超过 7 个区块距离）。
智能合约 概念 智能合约保存了合约当前的运行状态：
balance：当前余额 nonce：交易次数 code：合约代码 storage：存储，使用 MPT 数据结构 Solidity 是最常用的语言，类似 JavaScript。其脚本一般具备以下结构：
pragma solidity ^0.4.xx; contract SimpleAuction { address public beneficiary; unit public auctionEnd; address public highestBidder; mapping(address =&amp;gt; uint) bids; address[] bidders; } </description>
    </item>
    
    <item>
      <title>潦草 PKU 区块链备忘录</title>
      <link>https://kyocius.github.io/posts/pku-blockchain/2024-08-26-pku-btc/</link>
      <pubDate>Mon, 26 Aug 2024 14:19:05 +0800</pubDate>
      
      <guid>https://kyocius.github.io/posts/pku-blockchain/2024-08-26-pku-btc/</guid>
      <description>不要被学术思维或是程序员思维限制创造力。
密码学基础 哈希函数的三个特点：
单向性（One-Wayness）：$X \rightarrow H(X)$。 唯一性（Uniqueness）：$X$ 只对应一个 $H(X)$。 抗碰撞性（Collision Resistance）：不存在 $H(X) = H(Y)$。 数据结构 最重要的哈希树（Merkle Tree）结构。
区块链实现 UTXO（Unspent Transaction Output）：所有没被花掉的交易的输出。全节点要在内存中维护 UTXO，以便快速检验是否存在 Double Spending。
网络 比特币网络使用 P2P 和 TCP，便于穿透防火墙。 比特币对区块有 1M 字节的限制。 挖矿难度 挖矿原理：$$ Hash(Block \ Header) \leq Target $$
比特币采用 SHA-256 算法，也就是说目标值有 $2^{256}$ 个取值。
挖矿难度：$$ Difficulty = \frac{Difficulty^{=1} \ Target}{Target} $$
限制出块时间。出块时间太短：容易改链。
比特币规定每隔 2016 个区块要调整阈值。目标阈值迭代更新方法：
$$ Target=Target \times \frac{Actual \ Time}{Expected \ Time} $$
$$ Expected \ Time = 2016 \times 10 \ min/block $$</description>
    </item>
    
  </channel>
</rss>
